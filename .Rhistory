mutate(geocode(FIRST_Address))
#Google API key
ggmap::register_google(key = "AIzaSyDjpa_BSzUs11JA1rBa2YFZs3YMrfPiu-A")
View(austin_parks)
g
#finds longitude and latitude
travis_parks = travis_parks %>%
mutate(geocode(FIRST_Address))
#finds associated addresses of longitude and latitude
address <- do.call(rbind,
lapply(1:nrow(travis_parks),
function(i)revgeocode(as.numeric(travis_parks[i,4:5]))))
#combines address vector with austin_parks
travis_parks <- cbind(travis_parks,address)
#extracts zipcode from address vector
travis_parks$zipcode <- substr(str_extract(travis_parks$address," [0-9]{5}, .+"),2,6)
#removes newly created address column
travis_parks = travis_parks[,-6]
#renames columns in travis parks
travis_parks = rename(travis_parks, address = FIRST_Address)
travis_parks = rename(travis_parks, acres = SUM_Park_Acres)
#renames columns in austin parks
austin_parks = rename(austin_parks, address = ADDRESS)
austin_parks = rename(austin_parks, zipcode = ZIPCODE)
austin_parks = rename(austin_parks, acres = ASSET_SIZE)
austin_parks = rename(austin_parks, Name = LOCATION_NAME)
#removes non-Austin zipcodes
austin_parks = austin_parks %>%
filter(zipcode >= 78700)
#removes non-Austin zipcodes
travis_parks = travis_parks %>%
filter(zipcode >= 78700)
#combines both data sets of parks in austin
all_austin_parks = rbind(austin_parks, travis_parks)
View(austin_parks)
View(travis_parks)
#imports data for Austin parks and median income per zipcode
austin_parks = read.csv('/Users/franklinstudent/Desktop/GitHub/Parks_Project/City_of_Austin_Parks_data.csv')
#removes unnecessary columns
austin_parks = select(austin_parks, -(1:2), -(4:29), -(31:45), -(47:49), -(51:55))
#finds longitude and latitude associated with each park
austin_parks = austin_parks %>%
mutate(geocode(ADDRESS))
#renames columns in austin parks
austin_parks = rename(austin_parks, address = ADDRESS)
austin_parks = rename(austin_parks, zipcode = ZIPCODE)
austin_parks = rename(austin_parks, acres = ASSET_SIZE)
austin_parks = rename(austin_parks, Name = LOCATION_NAME)
#removes non-Austin zipcodes
austin_parks = austin_parks %>%
filter(zipcode >= 78700)
#removes non-Austin zipcodes
travis_parks = travis_parks %>%
filter(zipcode >= 78700)
#combines both data sets of parks in austin
all_austin_parks = rbind(austin_parks, travis_parks)
#finds park percentages
zip_totals = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total))
sum(zip_totals$total)
#adds row for zipcode 78742, zero parks
zip_totals = zip_totals %>%
add_row(zipcode = '78742', total = 0, percentage = 0)
View(zip_totals)
more_parks = read.csv('/Users/franklinstudent/Desktop/GitHub/Parks/Austin_parks.csv')
View(more_parks)
more_parks = more_parks %>%
mutate(geocode(Address))
#finds associated addresses of longitude and latitude
address <- do.call(rbind,
lapply(1:nrow(more_parks),
function(i)revgeocode(as.numeric(more_parks[i,4:5]))))
#combines address vector with austin_parks
more_parks <- cbind(more_parks,address)
#extracts zipcode from address vector
more_parks$zipcode <- substr(str_extract(more_parks$address," [0-9]{5}, .+"),2,6)
#removes newly created address column
more_parks = more_parks[,-2]
AA_zip_totals = summarize(group_by(more_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total))
View(AA_zip_totals)
View(more_parks)
parks = read.csv('/Users/franklinstudent/Desktop/GitHub/Parks/Parks.csv')
View(parks)
more_parks = read.csv('/Users/franklinstudent/Desktop/GitHub/Parks/Parks.csv')
r
more_parks = more_parks %>%
mutate(geocode(Address))
#finds associated addresses of longitude and latitude
address <- do.call(rbind,
lapply(1:nrow(more_parks),
function(i)revgeocode(as.numeric(more_parks[i,4:5]))))
#combines address vector with austin_parks
more_parks <- cbind(more_parks,address)
#extracts zipcode from address vector
more_parks$zipcode <- substr(str_extract(more_parks$address," [0-9]{5}, .+"),2,6)
#removes newly created address column
more_parks = more_parks[,-2]
AA_zip_totals = summarize(group_by(more_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total))
View(AA_zip_totals)
list = c('78728', '78738')
more_parks1 = more_parks %>%
filter(zipcode == list)
View(more_parks1)
View(more_parks)
more_parks1 = more_parks %>%
filter(zipcode == list)
View(more_parks1)
list = c(78728, 78738)
more_parks1 = more_parks %>%
filter(zipcode == list)
View(more_parks1)
more_parks1 = more_parks %>%
filter(zipcode = list)
more_parks
more_parks1 = more_parks %>%
filter(zipcode >= 78728)
View(more_parks1)
more_parks1 = more_parks %>%
filter(zipcode == 78728)
View(more_parks1)
more_parks1 = more_parks %>%
filter(zipcode == 78738)
View(more_parks1)
more_parks1 = more_parks %>%
filter(zipcode == list)
more_parks1 = more_parks %>%
filter(zipcode == 78728)
more_parks2 = more_parks %>%
filter(zipcode == 78738)
View(parks)
parks = rbind(more_parks1, more_parks2)
View(parks)
View(zip_totals)
View(travis_parks)
all_austin_parks = rbind(all_austin_parks, parks)
#renames columns in austin parks
parks = rename(parks, acres = Acres.Of.Land)
#renames columns in austin parks
parks = rename(parks, acres = Acres.of.Land)
parks = rename(parks, Name = Park.Name)
all_austin_parks = rbind(all_austin_parks, parks)
View(all_austin_parks)
#finds park percentages
zip_totals = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total))
#adds row for zipcode 78742, zero parks
zip_totals = zip_totals %>%
add_row(zipcode = '78742', total = 0, percentage = 0)
sum(zip_totals$total)
View(zip_totals)
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(acres)) %>%
mutate(percentage = total/sum(all_austin_parks$acres))
#adds row for zipcode 78742, zero parks
avg_acre = avg_acre %>%
add_row(zipcode = '78742', total = 0, percentage = 0)
#barplot of avg acre
ggplot(data = avg_acre, mapping = aes(x = zipcode, y = total))+
geom_col( mapping = aes(x = reorder(zipcode, total), y = total), fill = 'lightblue') +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot of avg income
ggplot(data = austin_medianincome, mapping = aes(x = zipcode, y = avg.income))+
geom_col( mapping = aes(x = reorder(zipcode, avg.income), y = avg.income), fill = 'red') +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot of avg income
ggplot(data = austin_medianincome, mapping = aes(x = zipcode, y = Median.Household.Income))+
geom_col( mapping = aes(x = reorder(zipcode, Median.Household.Income), y = Median.Household.Income), fill = 'red') +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
zip_totals
sum(zip_totals$percentage)
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(acres)) %>%
mutate(percentage = total/sum(all_austin_parks$zipcode))
#finds park percentages
zip_totals = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total)) %>%
mutate(avg_acre = acres/total)
#finds park percentages
zip_totals = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total)) %>%
mutate(avg_acre = all_austin_parks$acres/total)
View(zip_totals)
#finds park percentages
zip_totals = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total)) %>%
mutate(avg_acre = sum(all_austin_parks$acres)/total)
#finds park percentages
zip_totals = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total)) %>%
mutate(avg_acre = sum(all_austin_parks$acres)/sum(total))
#finds park percentages
zip_totals = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total)) %>%
mutate(avg_acre = sum(all_austin_parks$acres)/total))
#finds park percentages
zip_totals = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(percentage = total/sum(total)) %>%
mutate(avg_acre = sum(all_austin_parks$acres)/total)
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(acres)) %>%
mutate(percentage = total/sum(all_austin_parks$zipcode))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(all_austin_acres$acres)) %>%
mutate(percentage = total/sum(all_austin_parks$zipcode))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(all_austin_parks$acres)) %>%
mutate(percentage = total/sum(all_austin_parks$zipcode))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(all_austin_parks$acres)) %>%
mutate(percentage = total/sum(as.numeric(all_austin_parks$zipcode)))
View(avg_acre)
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(all_austin_parks$acres)) %>%
mutate(percentage = total/sum(total)))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(all_austin_parks$acres)) %>%
mutate(percentage = total/sum(total))
View(avg_acre)
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(all_austin_parks$acres)) %>%
mutate(avg_acre = sum(all_austin_parks$acres)/total)
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(all_austin_parks$acres)) %>%
mutate(avg_acre = total/n(all_austin_parks$zipcode))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(avg_acre = sum(all_austin_parks$acres)/sum(total))
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(all_austin_parks$acres))
avg_acre
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n(all_austin_parks$acres)) %>%
mutate(avg_acre = sum(all_austin_parks$acres)/sum(total))
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n(as.numeric(all_austin_parks$acres)))
avg_acre = summarize(group_by(all_austin_parks, zipcode)
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n(as.numeric(acres)))
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n(acres))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(acres)) %>%
mutate(avg_acre = sum(all_austin_parks$acres)/sum(total))
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = sum(acres))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n()) %>%
mutate(avg_acre = sum(acres)/sum(total))
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n(), acres = sum(acres))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n(), acres = sum(acres)) %>%
mutate(avg_acre = sum(acres)/sum(total))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n(), acres = sum(acres)) %>%
mutate(avg_acre = acres/sum(total))
#finds ave acre percentages
avg_acre = summarize(group_by(all_austin_parks, zipcode), total = n(), acres = sum(acres)) %>%
mutate(avg_acre = acres/total)
#adds row for zipcode 78742, zero parks
avg_acre = avg_acre %>%
add_row(zipcode = '78742', total = 0, percentage = 0)
#adds row for zipcode 78742, zero parks
avg_acre = avg_acre %>%
add_row(zipcode = '78742', total = 0, acres = 0, avg_acre = 0)
#finds park percentages
zip_totals = summarize(group_by(all_austin_parks, zipcode), total = n(), acres = sum(acres)) %>%
mutate(percent_of_parks = total/sum(total)) %>%
mutate(avg_acre = acres/total)
#adds row for zipcode 78742, zero parks
avg_acre = avg_acre %>%
add_row(zipcode = '78742', total = 0, acres = 0, percent_of_parks = 0, avg_acre = 0)
#adds row for zipcode 78742, zero parks
zip_totals = zip_totals %>%
add_row(zipcode = '78742', total = 0, acres = 0, percent_of_parks = 0, avg_acre = 0)
sum(zip_totals$percent_of_parks)
sum(zip_totals$total)
sum(zip_totals$avg_acre)
3364.491/326
median(zip_totals$avg_acre)
median(zip_totals$acres)
###############MAY NOT NEED#########################
#creates map of park points
p <- ggmap(get_googlemap(center = c(lon =  -97.733330, lat = 30.266666),
zoom = 11, scale = 2,
maptype ='terrain',
color = 'color'))
figure1 = p + geom_point(aes(x = lon, y = lat),
data = all_austin_parks, size = 0.5)+ xlab("Longitude") + ylab("Latitude") + ggtitle("Figure 1") +
theme(plot.title = element_text(hjust = 0.5))
figure1
austin_parks = austin_parks %>%
mutate(zipcode = search_radius(lat = lat, lng = lon, radius = 1))
#barplot totals
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = total))+
geom_col(mapping = aes(x = reorder(zipcode, total), y = total), fill = 'darkgreen') +
coord_flip() + scale_y_continuous(name = "Total Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percentage)) +
geom_bar(stat = "identity")
#barplot percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks)) +
geom_bar(stat = "identity")
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks, fill = zipcode))+
geom_col( mapping = aes(x = reorder(zipcode, percentage), y = percentage)) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks, fill = zipcode))+
geom_col( mapping = aes(x = reorder(zipcode, percent_of_parks), y = percentage)) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks, fill = zipcode))+
geom_col( mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks)) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks))+
geom_col( mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks)) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot totals
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = total))+
geom_col(mapping = aes(x = reorder(zipcode, total), y = total), fill = 'darkgreen') +
coord_flip() + scale_y_continuous(name = "Total Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
View(zip_totals)
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks))+
geom_col( mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks), fill = acres) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks), fill = acres)+
geom_col( mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks)) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks))+
geom_col(mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks),  fill = "darkgreen") +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot park percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks))+
geom_col(mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks),  fill = avg_acre) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot park percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks))+
geom_col(mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks),  fill = avg_acre) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot park percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks))+
geom_col(mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks),  fill = zip_totals$avg_acre) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot park percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks))+
geom_col(mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks),  fill = total) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot park percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks))+
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks),  fill = total) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks), fill = total) +
geom_bar(stat = "identity")
#barplot percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks), fill = acres) +
geom_bar(stat = "identity")
#barplot park percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks))+
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks)) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, percent_of_parks), y = percent_of_parks), fill = acres) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, acres), y = percent_of_parks), fill = acres) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, acres), y = acres), fill = acres) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, acres), y = acres)) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = acres))+
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, acres), y = acres)) +
coord_flip() + scale_y_continuous(name = "Percentage of Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = acres))+
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, acres), y = acres)) +
coord_flip() + scale_y_continuous(name = "Acres") +
scale_x_discrete(name = "Zipcode") + ggtitle("Acre Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = acres))+
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, acres), y = acres), fill = zipcode) +
coord_flip() + scale_y_continuous(name = "Acres") +
scale_x_discrete(name = "Zipcode") + ggtitle("Acre Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = acres))+
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, acres), y = acres), stat = "identity", fill = zipcode) +
coord_flip() + scale_y_continuous(name = "Acres") +
scale_x_discrete(name = "Zipcode") + ggtitle("Acre Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
#barplot percentages
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = percent_of_parks), fill = acres) +
geom_bar(stat = "identity")
#barplot park totals
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = total))+
geom_col(mapping = aes(x = reorder(zipcode, total), y = total), fill = 'darkgreen') +
coord_flip() + scale_y_continuous(name = "Total Parks") +
scale_x_discrete(name = "Zipcode") + ggtitle("Park Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = zip_totals, mapping = aes(x = zipcode, y = acres))+
geom_col(data = zip_totals, mapping = aes(x = reorder(zipcode, acres), y = acres), fill = 'lightblue') +
coord_flip() + scale_y_continuous(name = "Acres") +
scale_x_discrete(name = "Zipcode") + ggtitle("Acre Distribution in Austin") +
theme(plot.title = element_text(hjust = 0.5))
data = merge(all_austin_parks, austin_medianincome)
View(data)
data1 = summarize(group_by(data, zipcode)
total = n(), acres = sum(acres)) %>%
mutate(percent_of_parks = total/sum(total)) %>%
mutate(avg_acre = acres/total)
data1 = summarize(group_by(data, zipcode)
data1 = summarize(group_by(data, zipcode))
data = summarize(group_by(data, zipcode))
data = merge(all_austin_parks, austin_medianincome)
data = summarize(group_by(data, zipcode))
data = merge(all_austin_parks, austin_medianincome)
data = summarize(group_by(data, zipcode), acres)
data = summarize(group_by(data, zipcode), acres)
data = summarize(group_by(data, zipcode), sum(acres))
data = merge(all_austin_parks, austin_medianincome)
data = summarize(group_by(data, zipcode), acres = sum(acres), data$population)
data = merge(all_austin_parks, austin_medianincome)
data = summarize(group_by(data, zipcode), acres = sum(acres), pop =data$population)
data = merge(all_austin_parks, austin_medianincome)
data = summarize(group_by(data, zipcode), acres = sum(acres), population)
data = merge(all_austin_parks, austin_medianincome)
data = merge(zip_totals, austin_medianincome)
merged_data = merge(zip_totals, austin_medianincome)
View(merged_data)
merged_data = merged_data %>%
mutate(parks_per_capita = total/Population)
merged_data = merged_data %>%
mutate(parks_per_capita = total/Population *100000)
lm(total ~ ., data = merged_data)
lm(total ~ acres, data = merged_data)
lm(total ~ acres + percent_of_parks + avg_acre + Median.Household.Income + Population +
No..Of.Households..2018.Est. + No..Of.Households.With.Income..200K...2108.Est. + No..With.Master.s.Degrees
+ No..With.Bachelor.s.Degree + Per.Capita.Income..2018.Est. + Median.Value.Of.Owner.Occupied.Homes..2018.Est. +
parks_per_capita, data = merged_data)
sum(merged_data$total)
sum(merged_data$Population)
sum(merged_data$total)/sum(merged_data$Population)
sum(merged_data$total)/sum(merged_data$Population) *100000
hist(zipcode, Median.Household.Income)
hist(zipcode, Median.Household.Income, data = merged_data)
?hist
hist(Median.Household.Income, data = merged_data)
hist(Median.Household.Income)
hist(merged_data$Median.Household.Income)
hist(merged_data$Median.Household.Income, breaks = 1)
hist(merged_data$Median.Household.Income, breaks = 100000)
hist(merged_data$Median.Household.Income, breaks = 1000)
hist(merged_data$Median.Household.Income, breaks = 10)
hist(merged_data$Median.Household.Income, breaks = 100)
hist(merged_data$Median.Household.Income, breaks = 10)
hist(merged_data$Median.Household.Income, breaks = 5)
hist(merged_data$Median.Household.Income, breaks = 7)
hist(merged_data$Median.Household.Income, breaks = 9)
hist(merged_data$Median.Household.Income, breaks = 10)
h <-hist(merged_data$Median.Household.Income, breaks = 10)
text(h$mids,h$counts,labels=h$counts, adj=c(0.5, -0.5))
h <-hist(merged_data$Median.Household.Income, breaks = 5)
text(h$mids,h$counts,labels=h$counts, adj=c(0.5, -0.5))
#creates histogram of Austin Parks
ggplot(merged_data, aes(x = acres)) +
geom_histogram(color="darkblue", fill="lightblue", binwidth = 50) +
geom_vline(aes(xintercept=mean(Acres.of.Land)),
color="red", linetype="dashed", size=1) +
ggtitle("Austin Parks") + theme(plot.title = element_text(hjust = 0.5))
#creates histogram of Austin Parks
ggplot(merged_data, aes(x = acres)) +
geom_histogram(color="darkblue", fill="lightblue", binwidth = 50) +
geom_vline(aes(xintercept=mean(acres)),
color="red", linetype="dashed", size=1) +
ggtitle("Austin Parks") + theme(plot.title = element_text(hjust = 0.5))
